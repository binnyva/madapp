App_CSVGo: Used in the app 'CSV:Go'. Stores queries as text that is used to generate CSV's of needed data that can be imported into other tools like Google Spreadsheet
App_CSVGo.id: 
App_CSVGo.name: 
App_CSVGo.description: 
App_CSVGo.query: 
App_CSVGo.db: 
App_CSVGo.added_on: 
App_CSVGo.last_run_on: 
App_CSVGo.vertical_id: 
App_CSVGo.status: 

App_Director: Used by the 'eDirectors' app. Stores a list of all the directors in the system. The website director listing comes from this table.
App_Director.id: 
App_Director.name: 
App_Director.role: 
App_Director.email: 
App_Director.linkedin: 
App_Director.image: 
App_Director.description: 
App_Director.sort: 
App_Director.user_id: 
App_Director.status: 

App_Event_Mail_Tracker: Deprecated. This was used in Events app backend - but not used anymore.
App_Event_Mail_Tracker.id: 
App_Event_Mail_Tracker.receive_id: 
App_Event_Mail_Tracker.item_id: 
App_Event_Mail_Tracker.type: 
App_Event_Mail_Tracker.name: 
App_Event_Mail_Tracker.email_id: 
App_Event_Mail_Tracker.email_subject: 
App_Event_Mail_Tracker.email_greating: 
App_Event_Mail_Tracker.email_content: 
App_Event_Mail_Tracker.sent_by: 
App_Event_Mail_Tracker.response_mail: 
App_Event_Mail_Tracker.status: 
App_Event_Mail_Tracker.created_at: 
App_Event_Mail_Tracker.updated_at: 

Archive: Stores the historical credits of all teachers. This is saved at the beginning of every year.
Archive.id: 
Archive.user_id: 
Archive.name: 
Archive.value: 
Archive.year: 
Archive.added_on: 

Batch: Stores all the batch information. 
Batch.id: 
Batch.day: Batch day - 0 is Sunday
Batch.class_time: Batch time - expressed in 24 hours time.
Batch.batch_head_id: The ID of the mentor of this batch. Links to the User table.
Batch.center_id: 
Batch.subject_id: 
Batch.project_id: 
Batch.year: Holds the year which the batch is a part of. 
Batch.status: 

BatchLevel: The batch level linking. Holds information on which all levels are part of which batch.
BatchLevel.id: 
BatchLevel.batch_id: 
BatchLevel.level_id: 
BatchLevel.year: 

BatchSubject: Which all subjects are taught in the which all batches. Reference table.
BatchSubject.id: 
BatchSubject.batch_id: 
BatchSubject.subject_id: 

Center: All information about Shelters are stored in this table.
Center.id: 
Center.name: Name of the Shelter
Center.city_id: The city this shelter belongs to
Center.center_head_id: The User.id of the volunteer who is the Shelter Operations Fellow of this Shelter
Center.class_starts_on: Class start date for the current year. Classes will get generated for this shelter only if this field is filled.
Center.medium: Medium of instuction
Center.preferred_gender: Ideal gender of the volunteers teaching at this shelter.
Center.latitude: Location of shelter
Center.longitude: Location of shelter
Center.authority_id: 
Center.type: 
Center.year_undertaking: 
Center.phone: 
Center.updated_on: 
Center.status: 

CenterAuthority: Details of the people running the Shelter.
CenterAuthority.id: 
CenterAuthority.center_id: 
CenterAuthority.name: 
CenterAuthority.phone: 
CenterAuthority.email: 
CenterAuthority.status: 

CenterData: More shelter information gets stored here. Things like historical sherter class starting days, Center heads, etc.
CenterData.id: 
CenterData.center_id: 
CenterData.name: 
CenterData.year: 
CenterData.value: 
CenterData.data: 

CenterProject: Which all projects are active in Shelter.
CenterProject.id: 
CenterProject.center_id: 
CenterProject.project_id: 
CenterProject.year: 
CenterProject.added_on: 

City: All cities that are active in MAD
City.id: 
City.name: 
City.president_id: City Team Lead of this city.
City.added_on: 
City.classes_happening: 
City.region_id: 
City.latitude: 
City.longitude: 
City.type: Two city(leadership, and test) are marked as vertiual. No actual operations happen in those two cities. They are for testing/management purposes.

Class: All information about classes that happened will be stored in this. Rows in this table are genearted by the schedule_classes cron job. Rows for the next two weeks will be generated based on the assignments.
Class.id: 
Class.batch_id: 
Class.level_id: 
Class.project_id: 
Class.class_on: 
Class.feedback: 
Class.lesson_id: Deprecated
Class.class_type: If its an extra class the value of this will be 'extra'. Those are classes that happens the normal schedule(For eg, if we didn't get enough classes normally).
Class.class_satisfaction: 
Class.cancel_option: 
Class.cancel_reason: 
Class.updated_by_mentor: 
Class.updated_by_teacher: 
Class.status: 

Comment: Catch-all comment storing table. This will be storing notes on any of the 'item' - 'User','Student','City','Center','Event'
Comment.id: 
Comment.item: 
Comment.item_id: The forign key of what ever the item is in that row.
Comment.comment: 
Comment.added_on: 
Comment.added_by_user_id: 

Credit_Parameter: Not used right now - will update when used. 
Credit_Parameter.id: 
Credit_Parameter.name: 
Credit_Parameter.description: 
Credit_Parameter.positive: 
Credit_Parameter.negative: 
Credit_Parameter.vertical_id: 
Credit_Parameter.status: 

DBMerge: Used for the merge of the databases - not used after that.
DBMerge.id: 
DBMerge.table_name: 
DBMerge.from_table_name: 
DBMerge.last_update_id: 
DBMerge.updated_on: 

Donut_Deleted_Donation: This stores a copy of the donation when anyone deletes it. For historical purpose.
Donut_Deleted_Donation.id: 
Donut_Deleted_Donation.type: Type of donation - cash, cheque, online donation, etc. 
Donut_Deleted_Donation.fundraiser_user_id: 
Donut_Deleted_Donation.donor_id: 
Donut_Deleted_Donation.status: 
Donut_Deleted_Donation.amount: 
Donut_Deleted_Donation.nach_start_on: 
Donut_Deleted_Donation.nach_end_on: 
Donut_Deleted_Donation.cheque_no: 
Donut_Deleted_Donation.added_on: 
Donut_Deleted_Donation.updated_on: 
Donut_Deleted_Donation.updated_by_user_id: 
Donut_Deleted_Donation.with_user_id: 
Donut_Deleted_Donation.comment: 

Donut_Deposit: Deposit/handover information. When ever a user hands over money to another user(eg. vol to coach, coach to fellow) it creates a row in this table
Donut_Deposit.id: 
Donut_Deposit.collected_from_user_id: 
Donut_Deposit.given_to_user_id: 
Donut_Deposit.added_on: 
Donut_Deposit.reviewed_on: 
Donut_Deposit.amount: Total amount of the hand over - the sum of all the donatitons handed over.
Donut_Deposit.deposit_information: Holds the deposit id from salesforce. For double veification.
Donut_Deposit.status: 

Donut_Donation: All donation inforamtion.
Donut_Donation.id: 
Donut_Donation.type: 
Donut_Donation.fundraiser_user_id: User.id - the person who raised the amount.
Donut_Donation.donor_id: Dount_Donor.id - The donor who made donation.
Donut_Donation.status: 
Donut_Donation.amount: 
Donut_Donation.nach_start_on: 
Donut_Donation.nach_end_on: 
Donut_Donation.cheque_no: 
Donut_Donation.added_on: 
Donut_Donation.updated_on: 
Donut_Donation.with_user_id: User.id - This donation should be with the given user.
Donut_Donation.updated_by_user_id: User.id - Data was update by this user.
Donut_Donation.comment: 

Donut_DonationDeposit: Reference tables that holds information on which all donation make up a deposit.
Donut_DonationDeposit.id: 
Donut_DonationDeposit.deposit_id: 
Donut_DonationDeposit.donation_id: 

Donut_Donation_Version: Not used right now. This was used to hold all changes  made to any donation. Versioning.
Donut_Donation_Version.id: 
Donut_Donation_Version.donation_id: 
Donut_Donation_Version.type: 
Donut_Donation_Version.fundraiser_user_id: 
Donut_Donation_Version.donor_id: 
Donut_Donation_Version.status: 
Donut_Donation_Version.amount: 
Donut_Donation_Version.cheque_no: 
Donut_Donation_Version.created_on: 
Donut_Donation_Version.updated_on: 
Donut_Donation_Version.comment: 
Donut_Donation_Version.version: 

Donut_Donor: All donor information. 
Donut_Donor.id: 
Donut_Donor.name: 
Donut_Donor.phone: 
Donut_Donor.email: 
Donut_Donor.address: 
Donut_Donor.added_by_user_id: 
Donut_Donor.added_on: 
Donut_Donor.updated_on: 

Donut_Network: Fraise information. Donor information, network mapping etc. 
Donut_Network.id: 
Donut_Network.name: 
Donut_Network.email: 
Donut_Network.phone: 
Donut_Network.relationship: 
Donut_Network.donor_status: 
Donut_Network.pledged_amount: 
Donut_Network.pledge_type: 
Donut_Network.nach_duration: 
Donut_Network.collection_by: 
Donut_Network.address: 
Donut_Network.added_by_user_id: 
Donut_Network.follow_up_on: 
Donut_Network.collect_on: 
Donut_Network.added_on: 

Donut_NetworkData: Network mapping information.
Donut_NetworkData.id: 
Donut_NetworkData.donut_network_id: 
Donut_NetworkData.name: 
Donut_NetworkData.value: 
Donut_NetworkData.data: 
Donut_NetworkData.added_on: 

Event: Event information.
Event.id: 
Event.name: 
Event.description: 
Event.starts_on: 
Event.ends_on: 
Event.place: 
Event.type: 
Event.city_id: 
Event.event_type_id: Event_Type.id - What type of an event this is
Event.vertical_id: Vertical.id - What vertical this event is a part of(eg. Ed Support Training.)
Event.user_selection_options: 
Event.created_by_user_id: User.id - Created by the given user
Event.latitude: Location of the event
Event.longitude: Location of the event.
Event.created_on: 
Event.updated_on: 
Event.notification_status: 
Event.created_from: 
Event.status: 

Event_Type: All the different event types. 
Event_Type.id: 
Event_Type.name: 
Event_Type.status: 

Exam: 
Exam.id: 
Exam.name: 
Exam.exam_on: 
Exam.exam_type_id: 
Exam.status: 
Exam.year: 

ExamSubject: 
ExamSubject.id: 
ExamSubject.exam_id: 
ExamSubject.subject_id: 

Exam_Type: 
Exam_Type.id: 
Exam_Type.name: 
Exam_Type.ferquency: 

FAM_ApplicantFeedback: Fellowship Application Management - this table holds the feedback applicants give at year end.
FAM_ApplicantFeedback.id: 
FAM_ApplicantFeedback.applicant_user_id: 
FAM_ApplicantFeedback.reviewer_user_id: 
FAM_ApplicantFeedback.question_id: 
FAM_ApplicantFeedback.feedback: 
FAM_ApplicantFeedback.comment: 
FAM_ApplicantFeedback.added_on: 
FAM_ApplicantFeedback.confidential: 

FAM_ApplicantFeedbackQuestions: The questions the applicants should be asked.
FAM_ApplicantFeedbackQuestions.id: 
FAM_ApplicantFeedbackQuestions.question: 
FAM_ApplicantFeedbackQuestions.type: 
FAM_ApplicantFeedbackQuestions.target: 
FAM_ApplicantFeedbackQuestions.description: 
FAM_ApplicantFeedbackQuestions.comment: 
FAM_ApplicantFeedbackQuestions.status: 

FAM_Evaluation: 
FAM_Evaluation.id: 
FAM_Evaluation.user_id: 
FAM_Evaluation.parameter_id: 
FAM_Evaluation.evaluator_id: 
FAM_Evaluation.response: 
FAM_Evaluation.added_on: 

FAM_Parameter: All the parameters that will be evaluated
FAM_Parameter.id: 
FAM_Parameter.stage_id: FAM_Stage.id - which stage this parameter is a part of.
FAM_Parameter.category_id: FAM_Parameter_Category.id
FAM_Parameter.name: 
FAM_Parameter.type: 
FAM_Parameter.required: 
FAM_Parameter.sort: 
FAM_Parameter.status: 

FAM_Parameter_Category: 
FAM_Parameter_Category.id: 
FAM_Parameter_Category.stage_id: 
FAM_Parameter_Category.group_id: 
FAM_Parameter_Category.name: 
FAM_Parameter_Category.status: 

FAM_Referral: Applicants can refer other people for  roles. This holdes the referals.
FAM_Referral.id: 
FAM_Referral.referer_user_id: 
FAM_Referral.referee_user_id: 
FAM_Referral.group_id: 
FAM_Referral.created_at: 

FAM_Stage: All the stages in play.
FAM_Stage.id: 
FAM_Stage.name: 
FAM_Stage.status: 

FAM_UserEvaluator: This holds the evaluator assignments - which user is assigned to which evaluator.
FAM_UserEvaluator.id: 
FAM_UserEvaluator.user_id: User.id
FAM_UserEvaluator.evaluator_id: User.id
FAM_UserEvaluator.group_id: Group.id

FAM_UserGroupPreference: What all roles each user is applying for.
FAM_UserGroupPreference.id: 
FAM_UserGroupPreference.user_id: User.id
FAM_UserGroupPreference.group_id: Group.id
FAM_UserGroupPreference.evaluator_id: User.id
FAM_UserGroupPreference.preference: 
FAM_UserGroupPreference.taskfolder_link: 
FAM_UserGroupPreference.city_id: City.id
FAM_UserGroupPreference.added_on: 
FAM_UserGroupPreference.status: 

FAM_UserStage: The given user is is the the given stage.
FAM_UserStage.id: 
FAM_UserStage.user_id: User.id
FAM_UserStage.group_id: Group.id
FAM_UserStage.stage_id: FAM_Stage.id
FAM_UserStage.evaluator_id: User.id
FAM_UserStage.comment: 
FAM_UserStage.status: 
FAM_UserStage.shelter_id: Center.id

FAM_UserTask: All the tasks the appilcants has submitted.
FAM_UserTask.id: 
FAM_UserTask.user_id: User.id
FAM_UserTask.common_task_url: 
FAM_UserTask.preference_1_group_id: 
FAM_UserTask.preference_1_task_files: 
FAM_UserTask.preference_1_video_files: 
FAM_UserTask.preference_2_group_id: 
FAM_UserTask.preference_2_task_files: 
FAM_UserTask.preference_2_video_files: 
FAM_UserTask.preference_3_group_id: 
FAM_UserTask.preference_3_task_files: 
FAM_UserTask.preference_3_video_files: 
FAM_UserTask.added_on: 

FR_UserCredit: Not in active use yet.
FR_UserCredit.id: 
FR_UserCredit.user_id: User.id
FR_UserCredit.credit_parameter_id: Credit_Parameter.id
FR_UserCredit.change: 
FR_UserCredit.current_credit: 
FR_UserCredit.week_start_on: 
FR_UserCredit.added_on: 
FR_UserCredit.marked_by_user_id: User.id

Grade_Template: 
Grade_Template.id: 
Grade_Template.name: 
Grade_Template.status: 

Grade_Template_Collection: 
Grade_Template_Collection.id: 
Grade_Template_Collection.grade_id: 
Grade_Template_Collection.grade_template_id: 

Grade_Template_Grade: 
Grade_Template_Grade.id: 
Grade_Template_Grade.grade: 
Grade_Template_Grade.from_mark: 
Grade_Template_Grade.to_mark: 

Group: All the user groups
Group.id: 
Group.name: 
Group.type: 
Group.group_type: Only valid if this is 'normal'
Group.vertical_id: Vertical.id
Group.region_id: Deprecated
Group.status: 

GroupHierarchy: Not in use
GroupHierarchy.id: 
GroupHierarchy.group_id: 
GroupHierarchy.reports_to_group_id: 

GroupPermission: Permission settings for group.
GroupPermission.id: 
GroupPermission.group_id: 
GroupPermission.permission_id: 

IS_Event: Impact survey data collection event. 
IS_Event.id: 
IS_Event.name: 
IS_Event.added_on: 
IS_Event.status: 
IS_Event.vertical_id: Vertical.id

IS_Question: Impact Survey questions
IS_Question.id: 
IS_Question.question: 
IS_Question.vertical_id: Vertical.id
IS_Question.status: 

IS_Response: Impact Survey responses.
IS_Response.id: 
IS_Response.is_event_id: IS_Event.id
IS_Response.user_id: User.id
IS_Response.question_id: IS_Question.id
IS_Response.student_id: Student.id
IS_Response.response: 
IS_Response.added_on: 

Lesson: Deprecated
Lesson.id: 
Lesson.name: 
Lesson.book_id: 

Level: All class sections are stored here. This is how child grouping is done with Ed support and FP.
Level.id: 
Level.name: 
Level.grade: 
Level.center_id: Center.id
Level.medium: 
Level.preferred_gender: 
Level.medium_id: Medium.id
Level.project_id: Project.id - this decides if the row holds Ed data or FP data.
Level.book_id: 
Level.year: 
Level.status: 

Log: Event logging. Used for debugging more than anything else.
Log.id: 
Log.name: 
Log.log: 
Log.user_id: User.id
Log.added_on: 
Log.level: 

Mark: 
Mark.id: 
Mark.student_id: 
Mark.subject_id: 
Mark.exam_id: 
Mark.marks: 
Mark.total: 
Mark.input_data: 
Mark.status: 
Mark.template_id: 

Medium: 
Medium.id: 
Medium.name: 
Medium.status: 

Message_Queue: Queue for sending emails. Supports SMSs too - but right now only emails recides here. 
Message_Queue.id: 
Message_Queue.type: 
Message_Queue.to: 
Message_Queue.from: 
Message_Queue.subject: 
Message_Queue.body: 
Message_Queue.attachments: 
Message_Queue.info: 
Message_Queue.added_on: 
Message_Queue.status: 
Message_Queue.sent_on: 

Permission: User group permissions. 
Permission.id: 
Permission.name: 
Permission.value: 

Project: A project is a program that uses the ed support format intervention. Right now, just Ed Support and Foundational program.
Project.id: 
Project.name: 
Project.added_on: 

Push_Notification: Used in events app. Holds all the push notifications. There is a cron that will send out the notification.
Push_Notification.id: 
Push_Notification.user_id: User.id
Push_Notification.imei_no: 
Push_Notification.hash_key: 
Push_Notification.fcm_regid: 
Push_Notification.app_version: 
Push_Notification.status: 
Push_Notification.created_on: 
Push_Notification.updated_on: 

Region: Deprecated
Region.id: 
Region.name: 
Region.director_id: 

Retention_Referrals: 
Retention_Referrals.id: 
Retention_Referrals.name: 
Retention_Referrals.email: 
Retention_Referrals.phone: 
Retention_Referrals.city_id: 
Retention_Referrals.referer_user_id: 
Retention_Referrals.added_on: 

Retention_UserGroupPreference: 
Retention_UserGroupPreference.id: 
Retention_UserGroupPreference.user_id: 
Retention_UserGroupPreference.group_id: 
Retention_UserGroupPreference.preference: 
Retention_UserGroupPreference.shelter_id: 
Retention_UserGroupPreference.city_id: 
Retention_UserGroupPreference.added_on: 
Retention_UserGroupPreference.status: 

SC_student_shelter_mapping: 
SC_student_shelter_mapping.id: 
SC_student_shelter_mapping.name: 
SC_student_shelter_mapping.birthday: 
SC_student_shelter_mapping.sex: 
SC_student_shelter_mapping.center_id: 
SC_student_shelter_mapping.description: 
SC_student_shelter_mapping.photo: 
SC_student_shelter_mapping.thumbnail: 
SC_student_shelter_mapping.added_on: 
SC_student_shelter_mapping.reason_for_leaving: 
SC_student_shelter_mapping.status: 
SC_student_shelter_mapping.level_id: 
SC_student_shelter_mapping.level_id_dup: 
SC_student_shelter_mapping.level_name: 
SC_student_shelter_mapping.level_grade: 
SC_student_shelter_mapping.level_center_id: 
SC_student_shelter_mapping.level_preferred_gender: 
SC_student_shelter_mapping.level_medium_id: 
SC_student_shelter_mapping.level_project_id: 
SC_student_shelter_mapping.level_book_id: 
SC_student_shelter_mapping.level_year: 
SC_student_shelter_mapping.level_status: 
SC_student_shelter_mapping.center_center_id: 
SC_student_shelter_mapping.center_name: 
SC_student_shelter_mapping.city_id: 
SC_student_shelter_mapping.center_head_id: 
SC_student_shelter_mapping.class_starts_on: 
SC_student_shelter_mapping.medium: 
SC_student_shelter_mapping.preferred_gender: 
SC_student_shelter_mapping.center_status: 
SC_student_shelter_mapping.city_city_id: 
SC_student_shelter_mapping.city_name: 
SC_student_shelter_mapping.president_id: 
SC_student_shelter_mapping.city_added_on: 
SC_student_shelter_mapping.city_classes_happening: 
SC_student_shelter_mapping.region_id: 
SC_student_shelter_mapping.city_type: 

SC_teacher_shelter_mapping: 
SC_teacher_shelter_mapping.id: 
SC_teacher_shelter_mapping.name: 
SC_teacher_shelter_mapping.title: 
SC_teacher_shelter_mapping.email: 
SC_teacher_shelter_mapping.mad_email: 
SC_teacher_shelter_mapping.phone: 
SC_teacher_shelter_mapping.sex: 
SC_teacher_shelter_mapping.password: 
SC_teacher_shelter_mapping.password_hash: 
SC_teacher_shelter_mapping.auth_token: 
SC_teacher_shelter_mapping.photo: 
SC_teacher_shelter_mapping.joined_on: 
SC_teacher_shelter_mapping.address: 
SC_teacher_shelter_mapping.bio: 
SC_teacher_shelter_mapping.facebook_id: 
SC_teacher_shelter_mapping.verification_status: 
SC_teacher_shelter_mapping.profile_progress: 
SC_teacher_shelter_mapping.source: 
SC_teacher_shelter_mapping.source_other: 
SC_teacher_shelter_mapping.birthday: 
SC_teacher_shelter_mapping.job_status: 
SC_teacher_shelter_mapping.edu_institution: 
SC_teacher_shelter_mapping.company: 
SC_teacher_shelter_mapping.preferred_day: 
SC_teacher_shelter_mapping.why_mad: 
SC_teacher_shelter_mapping.left_on: 
SC_teacher_shelter_mapping.reason_for_leaving: 
SC_teacher_shelter_mapping.induction_status: 
SC_teacher_shelter_mapping.teacher_training_status: 
SC_teacher_shelter_mapping.center_id: 
SC_teacher_shelter_mapping.city_other: 
SC_teacher_shelter_mapping.city_id: 
SC_teacher_shelter_mapping.subject_id: 
SC_teacher_shelter_mapping.project_id: 
SC_teacher_shelter_mapping.user_type: 
SC_teacher_shelter_mapping.credit: 
SC_teacher_shelter_mapping.consecutive_credit: 
SC_teacher_shelter_mapping.admin_credit: 
SC_teacher_shelter_mapping.campaign: 
SC_teacher_shelter_mapping.zoho_user_id: 
SC_teacher_shelter_mapping.status: 
SC_teacher_shelter_mapping.app_version: 
SC_teacher_shelter_mapping.userbatch_id: 
SC_teacher_shelter_mapping.user_id: 
SC_teacher_shelter_mapping.batch_id: 
SC_teacher_shelter_mapping.level_id: 
SC_teacher_shelter_mapping.requirement: 
SC_teacher_shelter_mapping.batch_batch_id: 
SC_teacher_shelter_mapping.batch_day: 
SC_teacher_shelter_mapping.class_time: 
SC_teacher_shelter_mapping.batch_head_id: 
SC_teacher_shelter_mapping.batch_center_id: 
SC_teacher_shelter_mapping.batch_subject_id: 
SC_teacher_shelter_mapping.batch_project_id: 
SC_teacher_shelter_mapping.batch_year: 
SC_teacher_shelter_mapping.batch_status: 

SS_Answer: 
SS_Answer.id: 
SS_Answer.answer: 
SS_Answer.question_id: 
SS_Answer.level: 
SS_Answer.status: 

SS_Question: 
SS_Question.id: 
SS_Question.question: 
SS_Question.status: 
SS_Question.survey_event_id: 

SS_Survey_Event: 
SS_Survey_Event.id: 
SS_Survey_Event.name: 
SS_Survey_Event.cycle: 
SS_Survey_Event.stage: 
SS_Survey_Event.started_by_user_id: 
SS_Survey_Event.added_on: 
SS_Survey_Event.status: 

SS_UserAnswer: 
SS_UserAnswer.id: 
SS_UserAnswer.question_id: 
SS_UserAnswer.user_id: 
SS_UserAnswer.answer: 
SS_UserAnswer.survey_event_id: 
SS_UserAnswer.comment: 
SS_UserAnswer.added_on: 

Setting: 
Setting.id: 
Setting.name: 
Setting.value: 
Setting.data: 

State: Deprecated
State.id: 
State.name: 

Student: All student information stored in this table. 
Student.id: 
Student.name: 
Student.birthday: 
Student.sex: 
Student.center_id: Center.id
Student.description: 
Student.photo: 
Student.thumbnail: 
Student.added_on: 
Student.reason_for_leaving: 
Student.status: 

StudentClass: Student attendandce will be stored here.
StudentClass.id: 
StudentClass.student_id: 
StudentClass.class_id: 
StudentClass.present: 
StudentClass.participation: 
StudentClass.check_for_understanding: 

StudentLevel: Student Class mapping.
StudentLevel.id: 
StudentLevel.student_id: Student.id
StudentLevel.level_id: Level.id

Subject: 
Subject.id: 
Subject.name: 
Subject.unit_count: 
Subject.city_id: City.id
Subject.status: 

Survey: 
Survey.id: 
Survey.name: 
Survey.type: 
Survey.status: 

SurveyAnswer: 
SurveyAnswer.id: 
SurveyAnswer.question_id: SurveyQuestion.id
SurveyAnswer.answer: 

SurveyQuestion: 
SurveyQuestion.id: 
SurveyQuestion.question: 
SurveyQuestion.survey_id: Survey.id
SurveyQuestion.type: 
SurveyQuestion.sort_order: 
SurveyQuestion.status: 

SurveyResponse: 
SurveyResponse.id: 
SurveyResponse.question_id: SurveyQuestion.id
SurveyResponse.answer_id: SurveyAnswer.id
SurveyResponse.answer: 
SurveyResponse.user_id: User.id
SurveyResponse.added_on: 

User: All volunteer data will be stored here.
User.id: 
User.name: 
User.title: Deprecated
User.email: 
User.mad_email: 
User.phone: 
User.sex: 
User.password: Deprecated
User.password_hash: 
User.auth_token: 
User.photo: 
User.joined_on: 
User.address: 
User.bio: 
User.facebook_id: 
User.verification_status: 
User.profile_progress: 
User.source: 
User.source_other: 
User.birthday: 
User.job_status: 
User.edu_institution: 
User.company: 
User.preferred_day: 
User.why_mad: 
User.left_on: 
User.updated_on: 
User.reason_for_leaving: 
User.induction_status: Deprecated
User.teacher_training_status: Deprecated
User.center_id: Not used
User.city_other: 
User.city_id: 
User.subject_id: 
User.project_id: Not used
User.user_type: 
User.credit: 
User.consecutive_credit: Deprecated
User.admin_credit: Deprecated
User.campaign: 
User.zoho_user_id: 
User.status: 
User.app_version: 

UserBatch: This holds the teacher mapping - which teacher is assigned to which batch/level
UserBatch.id: 
UserBatch.user_id: User.id
UserBatch.batch_id: Batch.id
UserBatch.level_id: Level.id
UserBatch.requirement: 

UserClass: User attendandce is marked in this table
UserClass.id: 
UserClass.user_id: User.id
UserClass.class_id: Class.id
UserClass.substitute_id: User.id
UserClass.zero_hour_attendance: 
UserClass.status: 

UserCredit: This stores a record of all the manual assignment of credits. 
UserCredit.id: 
UserCredit.user_id: User.id
UserCredit.credit: 
UserCredit.credit_assigned_by_user_id: User.id
UserCredit.comment: 
UserCredit.added_on: 
UserCredit.year: 

UserData: Key/value store for user related data. Right now, stores things like bank account information, CPP signing, etc.
UserData.id: 
UserData.user_id: User.id
UserData.name: 
UserData.value: 
UserData.data: 
UserData.added_on: 

UserEvent: User event attenandce data.
UserEvent.id: 
UserEvent.user_id: User.id
UserEvent.event_id: Event.id
UserEvent.present: 
UserEvent.late: 
UserEvent.user_choice: 
UserEvent.reason: 
UserEvent.created_from: 
UserEvent.type: 
UserEvent.created_on: 
UserEvent.rsvp_auth_key: 

UserGroup: User group assignment - this stores which user is part of which group.
UserGroup.id: 
UserGroup.user_id: User.id
UserGroup.group_id: Group.id
UserGroup.year: This lets us store historical data. 

User_Credit_Archive: Historical credit data - this is saved every week.
User_Credit_Archive.id: 
User_Credit_Archive.user_id: User.id
User_Credit_Archive.credit_on: 
User_Credit_Archive.credit: 

Vertical: Stores all the Verticals that are active
Vertical.id: 
Vertical.key: Not used.
Vertical.name: 
Vertical.status: 

VoiceOfChild_Comment: 
VoiceOfChild_Comment.id: 
VoiceOfChild_Comment.added_by_user_id: 
VoiceOfChild_Comment.student_id: 
VoiceOfChild_Comment.question: 
VoiceOfChild_Comment.type: 
VoiceOfChild_Comment.tags: 
VoiceOfChild_Comment.answer: 
VoiceOfChild_Comment.priority: 
VoiceOfChild_Comment.actionable: 
VoiceOfChild_Comment.escalation_status: 
VoiceOfChild_Comment.added_on: 

mailchimp_emaillist: 
mailchimp_emaillist.id: 
mailchimp_emaillist.list_name: 
mailchimp_emaillist.mailchimp_list_id: 
mailchimp_emaillist.total_user_count: 
mailchimp_emaillist.last_update_at: 
mailchimp_emaillist.created_at: 
mailchimp_emaillist.user_id: 
mailchimp_emaillist.status: 

mailchimp_volunteers: 
mailchimp_volunteers.id: 
mailchimp_volunteers.user_id: 

prism_answer_user: Stores data for the 360 degree project. Not used any more
prism_answer_user.id: 
prism_answer_user.user_id: 
prism_answer_user.answer_id: 
prism_answer_user.created_at: 
prism_answer_user.updated_at: 
prism_answer_user.reviewer_id: 
prism_answer_user.type: 
prism_answer_user.comment: 

prism_answers: Not used anymore
prism_answers.id: 
prism_answers.level: 
prism_answers.subject: 
prism_answers.question_id: 
prism_answers.created_at: 
prism_answers.updated_at: 

prism_cycles: Not used anymore
prism_cycles.id: 
prism_cycles.created_at: 
prism_cycles.updated_at: 
prism_cycles.name: 
prism_cycles.start_date: 
prism_cycles.end_date: 

prism_migrations: Not used anymore 
prism_migrations.migration: 
prism_migrations.batch: 

prism_questions: Not used anymore
prism_questions.id: 
prism_questions.subject: 
prism_questions.topic_id: 
prism_questions.created_at: 
prism_questions.updated_at: 
prism_questions.order: 

prism_speakToJithin: Not used anymore
prism_speakToJithin.id: 
prism_speakToJithin.subject: 
prism_speakToJithin.user_id: 
prism_speakToJithin.created_at: 
prism_speakToJithin.updated_at: 

prism_topics: Not used anymore
prism_topics.id: 
prism_topics.subject: 
prism_topics.created_at: 
prism_topics.updated_at: 
prism_topics.order: 

propel_calendarEvents: Not used anymore
propel_calendarEvents.id: 
propel_calendarEvents.type: 
propel_calendarEvents.start_time: 
propel_calendarEvents.end_time: 
propel_calendarEvents.student_id: 
propel_calendarEvents.status: 
propel_calendarEvents.created_at: 
propel_calendarEvents.updated_at: 

propel_cancelledCalendarEvents: Not used anymore
propel_cancelledCalendarEvents.id: 
propel_cancelledCalendarEvents.calendar_event_id: 
propel_cancelledCalendarEvents.reason: 
propel_cancelledCalendarEvents.comment: 
propel_cancelledCalendarEvents.created_at: 
propel_cancelledCalendarEvents.updated_at: 

propel_city_subject: Not used anymore
propel_city_subject.id: 
propel_city_subject.city_id: 
propel_city_subject.subject_id: 
propel_city_subject.created_at: 
propel_city_subject.updated_at: 

propel_fellow_wingman: Not used anymore
propel_fellow_wingman.id: 
propel_fellow_wingman.wingman_id: 
propel_fellow_wingman.fellow_id: 
propel_fellow_wingman.created_at: 
propel_fellow_wingman.updated_at: 

propel_migrations: Not used anymore
propel_migrations.migration: 
propel_migrations.batch: 

propel_student_wingman: Not used anymore
propel_student_wingman.id: 
propel_student_wingman.student_id: 
propel_student_wingman.wingman_id: 
propel_student_wingman.created_at: 
propel_student_wingman.updated_at: 

propel_subjects: Not used anymore
propel_subjects.id: 
propel_subjects.name: 
propel_subjects.created_at: 
propel_subjects.updated_at: 

propel_volunteerTimes: Not used anymore
propel_volunteerTimes.id: 
propel_volunteerTimes.calendar_event_id: 
propel_volunteerTimes.subject_id: 
propel_volunteerTimes.volunteer_id: 
propel_volunteerTimes.created_at: 
propel_volunteerTimes.updated_at: 
propel_volunteerTimes.other_subject: 

propel_wingmanJournals: Not used anymore
propel_wingmanJournals.id: 
propel_wingmanJournals.type: 
propel_wingmanJournals.title: 
propel_wingmanJournals.mom: 
propel_wingmanJournals.on_date: 
propel_wingmanJournals.student_id: 
propel_wingmanJournals.wingman_id: 
propel_wingmanJournals.module_id: 
propel_wingmanJournals.created_at: 
propel_wingmanJournals.updated_at: 

propel_wingmanModules: Not used anymore
propel_wingmanModules.id: 
propel_wingmanModules.name: 
propel_wingmanModules.created_at: 
propel_wingmanModules.updated_at: 

propel_wingmanTimes: Not used anymore
propel_wingmanTimes.id: 
propel_wingmanTimes.calendar_event_id: 
propel_wingmanTimes.wingman_module_id: 
propel_wingmanTimes.wingman_id: 
propel_wingmanTimes.created_at: 
propel_wingmanTimes.updated_at: 

